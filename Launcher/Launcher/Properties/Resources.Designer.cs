//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Launcher.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Launcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cfgver &quot;1&quot;
        ///unbindall
        ///bind &quot;0&quot; &quot;slot10&quot;
        ///bind &quot;1&quot; &quot;slot1&quot;
        ///bind &quot;2&quot; &quot;slot2&quot;
        ///bind &quot;3&quot; &quot;slot3&quot;
        ///bind &quot;4&quot; &quot;slot4&quot;
        ///bind &quot;5&quot; &quot;slot5&quot;
        ///bind &quot;6&quot; &quot;slot6&quot;
        ///bind &quot;7&quot; &quot;slot7&quot;
        ///bind &quot;8&quot; &quot;slot8&quot;
        ///bind &quot;9&quot; &quot;slot9&quot;
        ///bind &quot;a&quot; &quot;+moveleft&quot;
        ///bind &quot;b&quot; &quot;buymenu&quot;
        ///bind &quot;d&quot; &quot;+moveright&quot;
        ///bind &quot;e&quot; &quot;+use&quot;
        ///bind &quot;f&quot; &quot;+lookatweapon&quot;
        ///bind &quot;g&quot; &quot;drop&quot;
        ///bind &quot;i&quot; &quot;show_loadout_toggle&quot;
        ///bind &quot;k&quot; &quot;+voicerecord&quot;
        ///bind &quot;m&quot; &quot;teammenu&quot;
        ///bind &quot;q&quot; &quot;lastinv&quot;
        ///bind &quot;r&quot; &quot;+reload&quot;
        ///bind &quot;s&quot; &quot;+back&quot;
        ///bind &quot;t&quot; &quot;+spray_menu&quot;
        ///bind &quot;u&quot; &quot;messagemode2&quot;
        ///bind &quot;w&quot; &quot;+forward&quot;
        ///bin....
        /// </summary>
        internal static string config {
            get {
                return ResourceManager.GetString("config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;serverblacklist&quot;
        ///{
        ///}.
        /// </summary>
        internal static string server_blacklist {
            get {
                return ResourceManager.GetString("server_blacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;config&quot;
        ///{
        ///	&quot;setauto.csm_quality_level&quot;		&quot;3&quot;
        ///	&quot;setting.mat_software_aa_strength&quot;		&quot;1&quot;
        ///	&quot;VendorID&quot;		&quot;4318&quot;
        ///	&quot;DeviceID&quot;		&quot;8081&quot;
        ///	&quot;setting.fullscreen&quot;		&quot;0&quot;
        ///	&quot;setting.nowindowborder&quot;		&quot;1&quot;
        ///	&quot;setting.aspectratiomode&quot;		&quot;1&quot;
        ///	&quot;setting.mat_vsync&quot;		&quot;0&quot;
        ///	&quot;setting.mat_triplebuffered&quot;		&quot;0&quot;
        ///	&quot;setting.mat_monitorgamma&quot;		&quot;2.200000&quot;
        ///	&quot;setting.mat_queue_mode&quot;		&quot;-1&quot;
        ///	&quot;setting.mat_motion_blur_enabled&quot;		&quot;0&quot;
        ///	&quot;setauto.gpu_mem_level&quot;		&quot;2&quot;
        ///	&quot;setauto.gpu_level&quot;		&quot;3&quot;
        ///	&quot;setauto.mat_antialias&quot;		&quot;8&quot;
        ///	&quot;setauto.mat_aaqual [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string video {
            get {
                return ResourceManager.GetString("video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;config&quot;
        ///{
        ///	&quot;setting.csm_quality_level&quot;		&quot;3&quot;
        ///	&quot;setting.mat_software_aa_strength&quot;		&quot;1&quot;
        ///	&quot;VendorID&quot;		&quot;4318&quot;
        ///	&quot;DeviceID&quot;		&quot;8081&quot;
        ///	&quot;setting.fullscreen&quot;		&quot;0&quot;
        ///	&quot;setting.nowindowborder&quot;		&quot;1&quot;
        ///	&quot;setting.aspectratiomode&quot;		&quot;1&quot;
        ///	&quot;setting.mat_vsync&quot;		&quot;0&quot;
        ///	&quot;setting.mat_triplebuffered&quot;		&quot;0&quot;
        ///	&quot;setting.mat_monitorgamma&quot;		&quot;2.200000&quot;
        ///	&quot;setting.mat_queue_mode&quot;		&quot;-1&quot;
        ///	&quot;setting.mat_motion_blur_enabled&quot;		&quot;0&quot;
        ///	&quot;setting.gpu_mem_level&quot;		&quot;2&quot;
        ///	&quot;setting.gpu_level&quot;		&quot;3&quot;
        ///	&quot;setting.mat_antialias&quot;		&quot;8&quot;
        ///	&quot;setting.mat_aaqual [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string videodefaults {
            get {
                return ResourceManager.GetString("videodefaults", resourceCulture);
            }
        }
    }
}
